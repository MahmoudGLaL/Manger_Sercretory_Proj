<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <system.webServer>
        <!-- Enable WebSocket support -->
        <webSocket enabled="true" />

        <handlers>
            <!-- Handle Node.js server.js with iisnode -->
            <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
        </handlers>

        <rewrite>
            <rules>
                <!-- Node Inspector Debugging -->
                <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^server.js\/debug[\/]?" />
                </rule>

                <!-- Reverse Proxy Rule (Redirect all requests to localhost:3000) -->
                <rule name="ReverseProxyInboundRule1" stopProcessing="true">
                    <match url="(.*)" />
                    <action type="Rewrite" url="http://localhost:3000/{R:1}" />
                </rule>

                <!-- Serve static files from the /public directory -->
                <rule name="StaticContent">
                    <action type="Rewrite" url="public{REQUEST_URI}"/>
                </rule>

                <!-- WebSocket Proxy Rule -->
                 <rule name="WebSocketProxy" stopProcessing="true">
                    <match url="^socket.io/(.*)" />
                    <action type="Rewrite" url="http://128.16.66.169:7272/socket.io/{R:1}" />
                </rule>

                <!-- Route all other requests to Node.js server.js -->
                <rule name="DynamicContent">
                    <conditions>
                        <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                     <serverVariables>
                        <set name="HTTP_SEC_WEBSOCKET_EXTENSIONS" value="true" />
                    </serverVariables>
                </rule>
            </rules>
        </rewrite>

        <security>
            <requestFiltering>
                <hiddenSegments>
                    <add segment="node_modules"/>
                </hiddenSegments>
            </requestFiltering>
        </security>

        <!-- Ensure error responses pass through -->
        <httpErrors existingResponse="PassThrough" />

        <!-- Set Node.js environment variable -->
        <iisnode node_env="production"/>
    </system.webServer>
</configuration>
